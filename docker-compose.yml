services:
  postgres:
    image: postgres:latest
    container_name: postgres
    networks:
      - api-bolinho
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=apibolinho
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # app:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   container_name: api-bolinho
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - postgres
  #   environment:
  #     - "5432:5432"
  #     - DATABASE_HOST=postgres
  #     - DATABASE_PORT=5432
  #     - DATABASE_USERNAME=docker
  #     - DATABASE_PASSWORD=postgres
  #     - DATABASE_DATABASE=apibolinho
  #   volumes:
  #     - .:/app
  
  app:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    container_name: api-bolinho
    restart: always
    networks:
      - api-bolinho
    ports:
      - "3333:3333"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=docker
      - DATABASE_PASSWORD=postgres
      - DATABASE_DATABASE=apibolinho
    volumes:
      - .:/app

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: node-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
    ports:
      - '5050:80'
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local

networks:
  api-bolinho:
    driver: bridge